- hosts: localhost
  
  tasks:
  - name: Clone TAS repository
    ansible.builtin.git:
      repo: https://github.com/Sunnatillo/platform-aware-scheduling.git
      dest: /home/$USER/platform-aware-scheduling
      clone: yes
      update: yes
      version: energy-efficiency

  - name: Create monitoring namespace on Kubernetes
    kubernetes.core.k8s:
      name: "monitoring"
      kind: Namespace
      state: present
  
  - name: Install  node-exporter and prometheus
    shell: |
      helm install node-exporter /home/$USER/platform-aware-scheduling/telemetry-aware-scheduling/deploy/charts/prometheus_node_exporter_helm_chart/
      helm install prometheus /home/$USER/platform-aware-scheduling/telemetry-aware-scheduling/deploy/charts/prometheus_helm_chart/

  - name: Generate cert and key for custom metrics adapter
    shell: |
      mkdir /home/$USER/certs/
      cd /home/$USER/certs/
      export PURPOSE=serving
      openssl req -x509 -sha256 -new -nodes -days 365 -newkey rsa:2048 -keyout ${PURPOSE}-ca.key -out ${PURPOSE}-ca.crt -subj "/CN=ca"
      echo '{"signing":{"default":{"expiry":"43800h","usages":["signing","key encipherment","'${PURPOSE}'"]}}}' > "${PURPOSE}-ca-config.json"

  - name: Deploy prometheus adapter
    shell: |
      kubectl create namespace custom-metrics
      kubectl -n custom-metrics create secret tls cm-adapter-serving-certs --cert=/home/$USER/certs/serving-ca.crt --key=/home/$USER/certs/serving-ca.key
      helm install prometheus-adapter /home/$USER/platform-aware-scheduling/telemetry-aware-scheduling/deploy/charts/prometheus_custom_metrics_helm_chart/

  - name: Run extender configuration script
    shell: |
      ./home/$USER/platform-aware-scheduling/telemetry-aware-scheduling/deploy/extender-configuration/configure-scheduler.sh
    become: true

  - name: Deploy configmap getter
    shell: |
      kubectl apply -f /home/$USER/platform-aware-scheduling/telemetry-aware-scheduling/deploy/extender-configuration/configmap-getter.yaml

  - name: Change permissions of certificates
    shell: |
      chmod o+r /etc/kubernetes/pki/ca.key
      chmod o+r /etc/kubernetes/pki/ca.crt
    become: true

  - name: Create secret for TAS
    shell: |
      kubectl create secret tls extender-secret --cert /etc/kubernetes/pki/ca.crt --key /etc/kubernetes/pki/ca.key
  
  - name: Apply TAS deployment
    shell: |
      kubectl apply -f /home/$USER/platform-aware-scheduling/telemetry-aware-scheduling/deploy/

  - name: Clone descheduler repository
    ansible.builtin.git:
      repo: https://github.com/Sunnatillo/descheduler.git
      dest: /home/$USER/descheduler
      clone: yes
      update: yes
      version: energy-efficiency

  - name: Deploy descheduler deployments 
    shell: |
      cd /home/$USER/descheduler/
      kubectl create -f kubernetes/base/rbac.yaml
      kubectl create -f kubernetes/base/configmap.yaml
      kubectl create -f kubernetes/deployment/deployment.yaml

  - name: Deploy collectd 
    shell: |
      cd /home/$USER/platform-aware-scheduling/telemetry-aware-scheduling/docs/power/
      kubectl apply -f collectd/daemonset.yaml
      kubectl apply -f collectd/configmap.yaml 
      kubectl apply -f collectd/service.yaml

  - name: wait for collectd pods to come up
    shell: kubectl get pods -nmonitoring -lapp.kubernetes.io/name=collectd -o json
    register: collectd_pods
    retries: 20
    delay: 10
    until: collectd_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]

  - name: Install kube state metrics
    shell: |
      helm install "master-kube-state-metrics" /home/$USER/platform-aware-scheduling/telemetry-aware-scheduling/docs/power/kube-state-metrics
  
  - name: wait for kube-state-metrics  pods to come up
    shell: kubectl get pods -l app.kubernetes.io/name=kube-state-metrics -o json
    register: kube_state_metrics_pods
    retries: 20
    delay: 10
    until: kube_state_metrics_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  
  - name: Configure Prometheus and the Prometheus adapter
    shell: |
      cd /home/$USER/platform-aware-scheduling/telemetry-aware-scheduling/docs/power/
      kubectl apply -f prometheus/prometheus-config.yaml
      kubectl delete pods -nmonitoring -lapp=prometheus-server
      kubectl apply -f prometheus/custom-metrics-config.yml
      kubectl delete pods -n custom-metrics -lapp=custom-metrics-apiserver

  - name: apply taspolicy and power sensitive application  
    shell: |
      cd /home/$USER/platform-aware-scheduling/telemetry-aware-scheduling/docs/power/
      kubectl apply -f tas-policy.yaml
      
  - name: wait for pods to come up
    shell: kubectl get pods -o json
    register: kubectl_get_pods
    until: kubectl_get_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
