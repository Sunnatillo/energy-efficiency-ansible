- hosts: localhost
  vars:
    tas_dir: /home/$USER/platform-aware-scheduling/telemetry-aware-scheduling
  
  tasks:
  - name: Clone TAS repository
    ansible.builtin.git:
      repo: https://github.com/Sunnatillo/platform-aware-scheduling.git
      dest: /home/$USER/platform-aware-scheduling
      clone: yes
      update: yes
      version: energy-efficiency  
      force: yes

  - name: Create monitoring namespace on Kubernetes
    shell: kubectl create namespace monitoring
    ignore_errors: yes

  - name: Install  node-exporter and prometheus
    shell: |
      helm install node-exporter {{ tas_dir }}/deploy/charts/prometheus_node_exporter_helm_chart/
      helm install prometheus {{ tas_dir }}/deploy/charts/prometheus_helm_chart/
    ignore_errors: yes

  - name: Generate cert and key for custom metrics adapter
    shell: |
      mkdir /home/$USER/certs/
      cd /home/$USER/certs/
      export PURPOSE=serving
      openssl req -x509 -sha256 -new -nodes -days 365 -newkey rsa:2048 -keyout ${PURPOSE}-ca.key -out ${PURPOSE}-ca.crt -subj "/CN=ca"
      echo '{"signing":{"default":{"expiry":"43800h","usages":["signing","key encipherment","'${PURPOSE}'"]}}}' > "${PURPOSE}-ca-config.json"
    ignore_errors: yes

  - name: Deploy prometheus adapter
    shell: |
      kubectl create namespace custom-metrics
      kubectl -n custom-metrics create secret tls cm-adapter-serving-certs --cert=/home/$USER/certs/serving-ca.crt --key=/home/$USER/certs/serving-ca.key
      helm install prometheus-adapter {{ tas_dir }}/deploy/charts/prometheus_custom_metrics_helm_chart/
    ignore_errors: yes

  - name: Run extender configuration script
    shell: |
      cd {{ tas_dir }}
      ./deploy/extender-configuration/configure-scheduler.sh
    become: true
    ignore_errors: yes

  - name: Deploy configmap getter
    shell: |
      kubectl apply -f {{ tas_dir }}/deploy/extender-configuration/configmap-getter.yaml

  - name: Change permissions of certificates
    shell: |
      chmod o+r /etc/kubernetes/pki/ca.key
      chmod o+r /etc/kubernetes/pki/ca.crt
    become: true

  - name: Create secret for TAS
    shell: |
      kubectl create secret tls extender-secret --cert /etc/kubernetes/pki/ca.crt --key /etc/kubernetes/pki/ca.key
    ignore_errors: yes

  - name: Apply TAS deployment
    shell: |
      kubectl apply -f {{ tas_dir }}/deploy/
  
  - name: Wait for all  pods to come up
    shell: kubectl get pods -A -o json
    register: all_pods
    retries: 20
    delay: 10
    until: all_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"] 
